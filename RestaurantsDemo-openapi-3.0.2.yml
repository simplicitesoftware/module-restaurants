#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: RestaurantsDemo 4.0
components:
  schemas:
    Error404:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 404
    RstRestaurant:
      type: object
      properties:
        rstRstDescription:
          description: Description
          type: string
        rstRstCoordinates:
          description: Geographical coordinates
          type: string
        rstRstRating:
          description: Rating
          type: number
        rstRstPicture:
          description: Picture
          type: object
        rstRstLocId:
          description: Location
          type: string
        rstRstStatus:
          description: Status
          type: string
          enum:
          - CLOSED
          - OPEN
        rstRstWebSite:
          description: Web site
          type: string
        rstRstTimestamp:
          description: Data timestamp
          type: string
        rstRstState:
          description: State (e.g. `NY`)
          type: string
          enum:
          - AL
          - AK
          - AZ
          - AR
          - CA
          - CO
          - CT
          - DE
          - DC
          - FL
          - GA
          - HI
          - ID
          - IL
          - IN
          - IA
          - KS
          - KY
          - LA
          - ME
          - MD
          - MA
          - MI
          - MN
          - MS
          - MO
          - MT
          - NE
          - NV
          - NH
          - NJ
          - NM
          - NY
          - NC
          - ND
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VT
          - VA
          - WA
          - WV
          - WI
          - WY
        rstRstLocId__rstLocExtent:
          description: Location extent (miles)
          type: integer
        rstRstName:
          description: Name
          type: string
        rstRstAddress:
          description: Address
          type: string
        rstRstNbComments:
          description: Number of comments
          type: integer
        rstRstLocId__rstLocCoordinates:
          description: Location coordinates
          type: string
        rstRstLocId__rstLocState:
          description: Location state
          type: string
          enum:
          - AL
          - AK
          - AZ
          - AR
          - CA
          - CO
          - CT
          - DE
          - DC
          - FL
          - GA
          - HI
          - ID
          - IL
          - IN
          - IA
          - KS
          - KY
          - LA
          - ME
          - MD
          - MA
          - MI
          - MN
          - MS
          - MO
          - MT
          - NE
          - NV
          - NH
          - NJ
          - NM
          - NY
          - NC
          - ND
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VT
          - VA
          - WA
          - WV
          - WI
          - WY
        rstRstLocId__rstLocName:
          description: Location name
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        rstRstCuisine:
          description: Cuisine type
          type: string
    RstLocation:
      type: object
      properties:
        rstLocCoordinates:
          description: Location coordinates
          type: string
        rstLocState:
          description: Location state
          type: string
          enum:
          - AL
          - AK
          - AZ
          - AR
          - CA
          - CO
          - CT
          - DE
          - DC
          - FL
          - GA
          - HI
          - ID
          - IL
          - IN
          - IA
          - KS
          - KY
          - LA
          - ME
          - MD
          - MA
          - MI
          - MN
          - MS
          - MO
          - MT
          - NE
          - NV
          - NH
          - NJ
          - NM
          - NY
          - NC
          - ND
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VT
          - VA
          - WA
          - WV
          - WI
          - WY
        row_id:
          description: Unique technical row ID
          type: string
        rstLocExtent:
          description: Location extent (miles)
          type: integer
        rstLocName:
          description: Location name
          type: string
        rstLocDescription:
          description: Location description
          type: string
    ArrayOfRstRestaurant:
      type: array
      items:
        $ref: '#/components/schemas/RstRestaurant'
    ArrayOfRstLocation:
      type: array
      items:
        $ref: '#/components/schemas/RstLocation'
    PublicationResult:
      type: object
      properties:
        mime:
          description: MIME type
          type: string
        content:
          description: Content (plain text or base64 encoded)
          type: string
    ArrayOfRstComments:
      type: array
      items:
        $ref: '#/components/schemas/RstComments'
    ActionResult:
      type: object
      properties:
        result:
          description: Action result
          type: string
    RstComments:
      type: object
      properties:
        rstCmtDateTime:
          description: Date and time
          type: string
        rstCmtSentiment:
          description: Sentiment score
          type: integer
        rstCmtRstId__rstRstName:
          description: Name
          type: string
        rstCmtRstId__rstRstState:
          description: State (e.g. `NY`)
          type: string
          enum:
          - AL
          - AK
          - AZ
          - AR
          - CA
          - CO
          - CT
          - DE
          - DC
          - FL
          - GA
          - HI
          - ID
          - IL
          - IN
          - IA
          - KS
          - KY
          - LA
          - ME
          - MD
          - MA
          - MI
          - MN
          - MS
          - MO
          - MT
          - NE
          - NV
          - NH
          - NJ
          - NM
          - NY
          - NC
          - ND
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VT
          - VA
          - WA
          - WV
          - WI
          - WY
        rstCmtRstId:
          description: Restaurant
          type: string
        rstCmtVisible:
          description: Visible?
          type: boolean
        rstCmtRstId__rstRstAddress:
          description: Address
          type: string
        rstCmtEval:
          description: Evaluation
          type: integer
        rstCmtCommentsInEnglish:
          description: Free text comments translated in **english**
          type: string
        rstCmtComments:
          description: Free text comments in **native** language
          type: string
        rstCmtTones:
          description: Watson tones
          type: string
        rstCmtEmail:
          description: Customer's name
          type: string
        row_id:
          description: Unique technical row ID
          type: string
    TreeviewData:
      type: object
      properties:
        item:
          description: Object item with lists of linked objects' items
          type: object
    Error400:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 400
    Error401:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 401
    Error500:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 500
    Error403:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 403
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: Simplicite token
      scheme: bearer
      type: http
openapi: 3.0.2
paths:
  /rest/RstComments/{row_id}:
    post:
      summary: Create a new RstCommentsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RstComments'
      operationId: obj-rstcomments-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RstComments'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - RstComments
    get:
      summary: Get a RstComments business object record
      security:
      - bearerAuth: []
      operationId: obj-rstcomments-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RstComments'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - RstComments
    delete:
      summary: Delete a RstComments business object record
      security:
      - bearerAuth: []
      operationId: obj-rstcomments-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - RstComments
    put:
      summary: Update a RstCommentsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RstComments'
      operationId: obj-rstcomments-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RstComments'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - RstComments
  /rest/RstLocation/{row_id}:
    post:
      summary: Create a new RstLocationbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RstLocation'
      operationId: obj-rstlocation-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RstLocation'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - RstLocation
    get:
      summary: Get a RstLocation business object record
      security:
      - bearerAuth: []
      operationId: obj-rstlocation-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RstLocation'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - RstLocation
    delete:
      summary: Delete a RstLocation business object record
      security:
      - bearerAuth: []
      operationId: obj-rstlocation-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - RstLocation
    put:
      summary: Update a RstLocationbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RstLocation'
      operationId: obj-rstlocation-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RstLocation'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - RstLocation
  /rest/RstLocation:
    get:
      summary: Search RstLocation business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-rstlocation-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfRstLocation'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: rstLocName
        description: Search filter for Location name
        required: false
      - schema:
          type: string
          enum:
          - AL
          - AK
          - AZ
          - AR
          - CA
          - CO
          - CT
          - DE
          - DC
          - FL
          - GA
          - HI
          - ID
          - IL
          - IN
          - IA
          - KS
          - KY
          - LA
          - ME
          - MD
          - MA
          - MI
          - MN
          - MS
          - MO
          - MT
          - NE
          - NV
          - NH
          - NJ
          - NM
          - NY
          - NC
          - ND
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VT
          - VA
          - WA
          - WV
          - WI
          - WY
        in: query
        name: rstLocState
        description: Search filter for Location state
        required: false
      - schema:
          type: string
        in: query
        name: rstLocDescription
        description: Search filter for Location description
        required: false
      - schema:
          type: string
        in: query
        name: rstLocCoordinates
        description: Search filter for Location coordinates
        required: false
      - schema:
          type: integer
        in: query
        name: rstLocExtent
        description: Search filter for Location extent (miles)
        required: false
      tags:
      - RstLocation
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      operationId: login
      responses:
        '200':
          description: Successful login
          content:
            application/json: {}
            text/plain: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: string
          enum:
          - json
          - oauth2
          - token
        in: query
        name: _output
        description: Optional output format
        required: false
      tags:
      - session
  /rest/RstRestaurant:
    get:
      summary: Search RstRestaurant business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-rstrestaurant-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfRstRestaurant'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: _indexsearch
        description: Index search query
        required: false
      - schema:
          type: string
          enum:
          - RstRestaurant-T1
        in: query
        name: _crosstab
        description: Apply pivot table
        required: false
      - schema:
          type: boolean
        in: query
        name: _crosstabcubes
        description: Pivot table data as cubes?
        required: false
      - schema:
          type: string
        in: query
        name: rstRstName
        description: Search filter for Name
        required: false
      - schema:
          type: string
          enum:
          - AL
          - AK
          - AZ
          - AR
          - CA
          - CO
          - CT
          - DE
          - DC
          - FL
          - GA
          - HI
          - ID
          - IL
          - IN
          - IA
          - KS
          - KY
          - LA
          - ME
          - MD
          - MA
          - MI
          - MN
          - MS
          - MO
          - MT
          - NE
          - NV
          - NH
          - NJ
          - NM
          - NY
          - NC
          - ND
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VT
          - VA
          - WA
          - WV
          - WI
          - WY
        in: query
        name: rstRstState
        description: Search filter for State (e.g. `NY`)
        required: false
      - schema:
          type: string
        in: query
        name: rstRstCuisine
        description: Search filter for Cuisine type
        required: false
      - schema:
          type: string
        in: query
        name: rstRstWebSite
        description: Search filter for Web site
        required: false
      - schema:
          type: string
        in: query
        name: rstRstAddress
        description: Search filter for Address
        required: false
      - schema:
          type: string
        in: query
        name: rstRstCoordinates
        description: Search filter for Geographical coordinates
        required: false
      - schema:
          type: string
        in: query
        name: rstRstTimestamp
        description: Search filter for Data timestamp
        required: false
      - schema:
          type: string
          enum:
          - CLOSED
          - OPEN
        in: query
        name: rstRstStatus
        description: Search filter for Status
        required: false
      - schema:
          type: integer
        in: query
        name: rstRstNbComments
        description: Search filter for Number of comments
        required: false
      - schema:
          type: number
        in: query
        name: rstRstRating
        description: Search filter for Rating
        required: false
      - schema:
          type: string
        in: query
        name: rstRstDescription
        description: Search filter for Description
        required: false
      - schema:
          type: string
        in: query
        name: rstRstPicture
        description: Search filter for Picture
        required: false
      - schema:
          type: string
        in: query
        name: rstRstLocId
        description: Search filter for Location
        required: false
      - schema:
          type: string
        in: query
        name: rstRstLocId__rstLocName
        description: Search filter for Location name
        required: false
      - schema:
          type: string
          enum:
          - AL
          - AK
          - AZ
          - AR
          - CA
          - CO
          - CT
          - DE
          - DC
          - FL
          - GA
          - HI
          - ID
          - IL
          - IN
          - IA
          - KS
          - KY
          - LA
          - ME
          - MD
          - MA
          - MI
          - MN
          - MS
          - MO
          - MT
          - NE
          - NV
          - NH
          - NJ
          - NM
          - NY
          - NC
          - ND
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VT
          - VA
          - WA
          - WV
          - WI
          - WY
        in: query
        name: rstRstLocId__rstLocState
        description: Search filter for Location state
        required: false
      - schema:
          type: string
        in: query
        name: rstRstLocId__rstLocCoordinates
        description: Search filter for Location coordinates
        required: false
      - schema:
          type: integer
        in: query
        name: rstRstLocId__rstLocExtent
        description: Search filter for Location extent (miles)
        required: false
      tags:
      - RstRestaurant
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      operationId: logout
      responses:
        '200':
          description: Successfull logout
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      tags:
      - session
  /rest/RstRestaurant/{row_id}:
    post:
      summary: Create a new RstRestaurantbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RstRestaurant'
      operationId: obj-rstrestaurant-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RstRestaurant'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - RstRestaurant
    get:
      summary: Get a RstRestaurant business object record
      security:
      - bearerAuth: []
      operationId: obj-rstrestaurant-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RstRestaurant'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - RstRestaurant
    delete:
      summary: Delete a RstRestaurant business object record
      security:
      - bearerAuth: []
      operationId: obj-rstrestaurant-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - RstRestaurant
    put:
      summary: Update a RstRestaurantbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RstRestaurant'
      operationId: obj-rstrestaurant-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RstRestaurant'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - RstRestaurant
  /rest/RstComments:
    get:
      summary: Search RstComments business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-rstcomments-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfRstComments'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
          enum:
          - RstComments-T1
        in: query
        name: _crosstab
        description: Apply pivot table
        required: false
      - schema:
          type: boolean
        in: query
        name: _crosstabcubes
        description: Pivot table data as cubes?
        required: false
      - schema:
          type: string
        in: query
        name: rstCmtDateTime
        description: Search filter for Date and time
        required: false
      - schema:
          type: string
        in: query
        name: rstCmtEmail
        description: Search filter for Customer's name
        required: false
      - schema:
          type: string
        in: query
        name: rstCmtRstId
        description: Search filter for Restaurant
        required: false
      - schema:
          type: string
        in: query
        name: rstCmtRstId__rstRstName
        description: Search filter for Name
        required: false
      - schema:
          type: string
        in: query
        name: rstCmtRstId__rstRstAddress
        description: Search filter for Address
        required: false
      - schema:
          type: string
          enum:
          - AL
          - AK
          - AZ
          - AR
          - CA
          - CO
          - CT
          - DE
          - DC
          - FL
          - GA
          - HI
          - ID
          - IL
          - IN
          - IA
          - KS
          - KY
          - LA
          - ME
          - MD
          - MA
          - MI
          - MN
          - MS
          - MO
          - MT
          - NE
          - NV
          - NH
          - NJ
          - NM
          - NY
          - NC
          - ND
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VT
          - VA
          - WA
          - WV
          - WI
          - WY
        in: query
        name: rstCmtRstId__rstRstState
        description: Search filter for State (e.g. `NY`)
        required: false
      - schema:
          type: integer
        in: query
        name: rstCmtEval
        description: Search filter for Evaluation
        required: false
      - schema:
          type: integer
        in: query
        name: rstCmtSentiment
        description: Search filter for Sentiment score
        required: false
      - schema:
          type: string
        in: query
        name: rstCmtComments
        description: Search filter for Free text comments in **native** language
        required: false
      - schema:
          type: string
        in: query
        name: rstCmtCommentsInEnglish
        description: Search filter for Free text comments translated in **english**
        required: false
      - schema:
          type: string
        in: query
        name: rstCmtTones
        description: Search filter for Watson tones
        required: false
      - schema:
          type: boolean
        in: query
        name: rstCmtVisible
        description: Search filter for Visible?
        required: false
      tags:
      - RstComments
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: boolean
        in: query
        name: texts
        description: Texts?
        required: false
      tags:
      - session
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module RestaurantsDemo
  title: RestaurantsDemo
  version: '4.0'
tags:
- name: RstComments
  description: Comments
- name: RstLocation
  description: Location
- name: RstRestaurant
  description: Restaurant
